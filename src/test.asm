EXTRN INPUT_MAIN_LOOP: FAR
EXTRN Draw_Single_Rect: FAR
EXTRN Draw_Ball: FAR
PUBLIC PADDLE_X
PUBLIC PADDLE_Y
PUBLIC PADDLE_WIDTH
PUBLIC PADDLE_HEIGHT
PUBLIC PADDLE_COLOR
PUBLIC PADDLE_SPEED
PUBLIC SCREEN_WIDTH
PUBLIC SCREEN_HEIGHT
PUBLIC SCREEN_SIZE
PUBLIC BORDER_LEFT
PUBLIC BORDER_RIGHT
PUBLIC BORDER_TOP
PUBLIC BORDER_BOTTOM
PUBLIC BLACK
PUBLIC WHITE

PUBLIC Ball_X
PUBLIC Ball_Y
PUBLIC Ball_Size

.MODEL SMALL
.STACK 100H
.DATA
     ; PADDLE DATA
     PADDLE_X      DW 96H
     PADDLE_Y      DW 96H
     PADDLE_WIDTH  DW 40
     PADDLE_HEIGHT DW 6
     PADDLE_COLOR  DB 4
     PADDLE_SPEED  DW 5

     ; SCREEN INFO
     SCREEN_WIDTH  DW 320
     SCREEN_HEIGHT DW 200
     SCREEN_SIZE   DW ?                                 ; SCREEN_WIDTH * SCREEN_HEIGHT

     ; BORDERS
     BORDER_LEFT   DW 0
     BORDER_RIGHT  DW ?                                 ; SCREEN_WIDTH - PADDLE_WIDTH
     BORDER_TOP    DW 0
     BORDER_BOTTOM DW SCREEN_HEIGHT - PADDLE_HEIGHT

     ; NEEDED COLORS
     BLACK         DB 0
     WHITE         DB 15
     ; BALL DATA
     Ball_X        DB 15
     Ball_Y        DB 15
     Ball_Size     DB 3



.CODE

MAIN PROC

     ; INITIALIZE DATA SEGMENT
          MOV  AX, @DATA
          MOV  DS, AX

     ; CALC SCREEN SIZE AND STORE IT
          MOV  AX, SCREEN_WIDTH
          MUL  SCREEN_HEIGHT
          MOV  SCREEN_SIZE, AX

     ; CALC BORDER RIGHT AND STORE IT
          MOV  AX, SCREEN_WIDTH
          SUB  AX, PADDLE_WIDTH
          MOV  BORDER_RIGHT, AX

     
     ; INITIALIZE VIDEO MODE
          MOV  AX, 0A000H
          MOV  ES, AX
          MOV  AH, 0
          MOV  AL, 13H
          INT  10H

     ; DRAW PADDLE
          MOV  AX, PADDLE_X
          MOV  DX, 320
          MUL  DX
          ADD  AX, PADDLE_Y
          MOV  DI, AX


          MOV  DX, PADDLE_HEIGHT
          mov  si, PADDLE_WIDTH
     ;  MOV DI, PADDLE_X * 320 + PADDLE_Y
          MOV  AL, PADDLE_COLOR
          CALL Draw_Single_Rect

     ; MAIN LOOP
          CALL INPUT_MAIN_LOOP

     ; RESTORE VIDEO MODE
          MOV  AH, 0
          MOV  AL, 3
          INT  10H

     ; RETURN CONTROL TO OPERATING SYSTEM
          MOV  AH, 4CH
          INT  21H

          RET
MAIN ENDP
END MAIN